/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9 8>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <17 16 15>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <23 22 21>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <20 19 18>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <30 29 28>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 11>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 12>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 13>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 14>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 15>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 16>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 17>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 18>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 19>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 20>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5 12>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 14 13 22>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <31 32 33>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ; | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | / |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |
            display-name = "Base";
            bindings = <
   AS(Q)  AS(W)  AS(E)     AS(R)     AS(T)          AS(Y)  AS(U)  AS(I)     AS(O)     AS(P)
   AS(A)  AS(S)  AS(D)     AS(F)     AS(G)          AS(H)  AS(J)  AS(K)     AS(L)     AS(SEMI)
   AS(Z)  AS(X)  AS(C)     AS(V)     AS(B)          AS(N)  AS(M)  &kp LCTL  &kp RALT  AS(FSLH)
                                  &kp LGUI  &mo 1  &kp SPACE     AS(RET)  &mo 2  &kp BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | 1  | 2  | 3  | 4  | 5  |     | <   | [   | {   | (   | ;  |
            // | 6  | 7  | 8  | 9  | 0  |     | ←   | ↓   | ↑   | →   | '  |
            // | \  | -  | =  | /  | *  |     | >   | ]   | }   | )   | `  |
            //           | GUI |     | SPC |     | ENT | ESC | TAB |
            display-name = "Lower";
            bindings = <
   &kp N1     &kp N2     &kp N3     &kp N4     &kp N5       &kp LESS_THAN  &kp LBKT   &kp LBRC   &kp LPAR   &kp SEMI
   &kp N6     &kp N7     &kp N8     &kp N9     &kp N0       &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT  &kp SQT
   &kp BSLH   &kp MINUS  &kp EQUAL  &kp SLASH  &kp ASTERISK  &kp GREATER_THAN &kp RBKT &kp RBRC   &kp RPAR   &kp GRAVE
                                  &kp LGUI   &trans     &kp SPACE    AS(RET)    &trans      &kp ESC   &kp TAB
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | SP   |  ↑   | ENT  | PGUP | VOL+ |     | F1  | F4  | F7  | F10 |
            // | ←    |  ↓   | →    | HOME | MUTE |     | F2  | F5  | F8  | F11 |
            // | INS  | PRSC | SCRL | PGDN | VOL- |     | F3  | F6  | F9  | F12 |
            //           | GUI |     | SPC |     | ENT |     | TAB |
            display-name = "Raise";
            bindings = <
   &kp SPACE  &kp UP_ARROW   &kp ENTER     &kp PAGE_UP   &kp C_VOL_UP   &kp C_BRIGHTNESS_INC  &kp F1  &kp F4  &kp F7  &kp F10
   &kp LEFT   &kp DOWN       &kp RIGHT     &kp HOME      &kp C_MUTE     &kp C_PLAY_PAUSE      &kp F2  &kp F5  &kp F8  &kp F11
   &kp INS    &kp PRINTSCREEN &kp SCROLLLOCK &kp PAGE_DOWN &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp F3  &kp F6  &kp F9  &kp F12
                                  &kp LGUI   &trans     &kp SPACE    AS(RET)    &trans      &kp TAB
            >;
        };

        system_layer {
            // -----------------------------------------------------------------------------------------
            // | BT CLR | CLR_ALL | BT PRV | BT NXT |     |     |     |     |     |     |
            // | BT0    | BT1     | BT2    | BT3    | BT4 |     |     |     |     |     |
            // | BOOT   | RESET   |       |        |     |     |     |     |     |     |
            //           | GUI |     | SPC |     | ENT | ESC |
            display-name = "System";
            bindings = <
   &bt BT_CLR    &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &trans      &none   &trans  &trans  &trans  &trans
   &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &none   &none   &none   &none
   &bootloader    &sys_reset     &none         &none         &none        &none   &trans  &trans  &trans  &trans
                                  &kp LGUI   &trans     &kp SPACE    AS(RET)    &trans      &kp ESC
            >;
        };

        extra_1 {
            status = "reserved";
        };

        extra_2 {
            status = "reserved";
        };

        extra_3 {
            status = "reserved";
        };
    };
};