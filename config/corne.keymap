/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9 8>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <17 16 15>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <23 22 21>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <20 19 18>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <30 29 28>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 11>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 12>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 13>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 14>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 15>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 16>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 17>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 18>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 19>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 20>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5 12>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 14 13 22>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <31 32 33>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ; | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | / |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |
            display-name = "Base";
            bindings = <
   AS(Q)  AS(W)  AS(E)     AS(R)     AS(T)          AS(Y)  AS(U)  AS(I)     AS(O)     AS(P)
   AS(A)  AS(S)  AS(D)     AS(F)     AS(G)          AS(H)  AS(J)  AS(K)     AS(L)     AS(SEMI)
   AS(Z)  AS(X)  AS(C)     AS(V)     AS(B)          AS(N)  AS(M)  &kp LCTL  &kp RALT  AS(FSLH)
                                  &kp LGUI  &mo 1  &kp SPACE     AS(RET)  &mo 2  &kp BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
            // | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
            // | BTCLR |     |     |     |     |     |     |     |     |     |     |
            //           | GUI |     | SPC |     | ENT | ESC | TAB |
            display-name = "Lower";
            bindings = <
   &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT        &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT &trans 
   &bt BT_CLR   &trans       &trans       &trans       &trans           &trans    &trans    &trans          &trans    &trans 
                             &kp LGUI     &trans       &kp SPACE        AS(RET)   &kp ESC   &kp TAB
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
            // | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
            // | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
            //           | GUI | ESC | SPC |     | ENT |     | TAB |
            display-name = "Raise";
            bindings = <
   AS(N1)    AS(N2)    AS(N3)    AS(N4)    AS(N5)        AS(N6)    AS(N7)    AS(N8)    AS(N9)   AS(N0)
   AS(MINUS) AS(EQUAL) &kp LBRC  &kp LBKT  &kp LPAR      &kp RPAR  &kp RBKT  &kp RBRC  AS(FSLH) AS(BSLH)
   AS(GRAVE) &trans    &trans    AS(COMMA) &kp COLON     &kp SEMI  AS(DOT)   &kp LCTRL &kp RALT &trans
                       &kp LGUI  &kp ESC   &kp SPACE     AS(RET)   &trans    &kp TAB
            >;
        };

        system_layer {
            // -----------------------------------------------------------------------------------------
            // | BT CLR | CLR_ALL | BT PRV | BT NXT |     |     |     |     |     |     |
            // | BT0    | BT1     | BT2    | BT3    | BT4 |     |     |     |     |     |
            // | BOOT   | RESET   |       |        |     |     |     |     |     |     |
            //           | GUI |     | SPC |     | ENT | ESC |
            display-name = "System";
            bindings = <
   &bt BT_CLR    &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &trans      &none   &trans  &trans  &trans  &trans
   &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &none   &none   &none   &none
   &bootloader    &sys_reset     &none         &none         &none        &none   &trans  &trans  &trans  &trans
                             &kp LGUI     &trans       &kp SPACE        AS(RET)   &trans   &kp ESC
            >;
        };

        extra_1 {
            status = "reserved";
        };

        extra_2 {
            status = "reserved";
        };

        extra_3 {
            status = "reserved";
        };
    };
};